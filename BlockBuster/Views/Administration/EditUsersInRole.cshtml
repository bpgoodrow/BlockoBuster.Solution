@using BlockBuster.ViewModels;
@model List<UserRoleViewModel>

@{
  string roleId = ViewBag.roleId;
}

@* <form method="post">
    <div class="card">
        <div class="card-header">
            <h2>Add or remove users from this role</h2>
        </div>
        <div class="card-body">
            @for (int i = 0; i < Model.Count; i++)
            {
                <div class="form-check m-1">
                    <input type="hidden" asp-for="@Model[i].UserId" />
                    <input type="hidden" asp-for="@Model[i].UserName" />
                    <input asp-for="@Model[i].IsSelected" class="form-check-input" />
                    <label class="form-check-label" asp-for="@Model[i].IsSelected">
                        @Model[i].UserName
                    </label>
                </div>
            }
        </div>
        <div class="card-footer">
            <input type="submit" value="Update" class="btn btn-primary"
                   style="width:auto" />
            <a asp-action="EditRole" asp-route-id="@roleId"
               class="btn btn-primary" style="width:auto">Cancel</a>
        </div>
    </div>
</form> *@

@using (Html.BeginForm("EditUsersInRole", "Administration", FormMethod.Post))
{
  <h2>Add or remove users from this role</h2>
  <ul>
  @for(int i = 0; i < Model.Count; i++)
  {
    <li>
      @Html.HiddenFor(m => m[i].UserId)
      @Html.HiddenFor(m => m[i].UserName)
      @Html.CheckBoxFor(m => m[i].IsSelected)
      @Html.Label(@Model[i].UserName)
    </li>
  }
  </ul>
  @Html.Hidden("roleId", @roleId)
  <input type="submit" value="Update" class="btn btn-primary" style="width:auto"/>
}
@Html.ActionLink("Cancel", "EditRole", "Administration", new {id = @roleId})